syntax = "proto3";

service Walle {
	rpc NewWriter(NewWriterRequest) returns (BaseResponse) {}
	rpc PutEntry(PutEntryRequest) returns (BaseResponse) {}

	rpc LastEntry(LastEntryRequest) returns (LastEntryResponse) {}
	rpc ReadEntries(ReadEntriesRequest) returns (stream Entry) {}
}

message Entry {
	int64 entry_id = 1;
	string writer_id = 2;
	bytes data = 3;
	// checksum_md5 is a rolling md5 for all `data`.
	bytes checksum_md5 = 4;
}

message NewWriterRequest {
	string stream_uri = 1;
	// if `target` is set, message is only for that specific `server`. Otherwise, it is a majority request
	// that should be forwarded to all known `server`-s. If `target` is set, stream_version must be set too.
	string target_server_id = 2;
	int64 stream_version = 3;

	string writer_id = 4;
}
message PutEntryRequest {
	string stream_uri = 1;
	string target_server_id = 2;
	int64 stream_version = 3;

	Entry entry = 4;
	int64 committed_entry_id = 5;
	bytes committed_entry_md5 = 6;
}

message BaseResponse {
	repeated string success_ids = 1;
	int32 fails = 2;
	int64 stream_version = 3;
}

message LastEntryRequest {
	string stream_uri = 1;
	string target_server_id = 2;
	int64 stream_version = 3;

	bool include_uncommitted = 4;
}

message LastEntryResponse {
	repeated Entry entries = 1;
}

message ReadEntriesRequest {
	string stream_uri = 1;
	string target_server_id = 2;
	int64 stream_version = 3;

	// if from_entry_id is <0, will start streaming latest entries.
	int64 from_entry_id = 4;
}

message StreamTopology {
	int64 version = 1;
	repeated string server_ids = 2;
}