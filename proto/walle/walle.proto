syntax = "proto3";
option go_package = "github.com/zviadm/walle/proto/walle";

import "walleapi/walleapi.proto";

service Walle {
	rpc NewWriter(NewWriterRequest) returns (NewWriterResponse) {}
	rpc PutEntryInternal(PutEntryInternalRequest) returns (PutEntryInternalResponse) {}

	rpc LastEntries(LastEntriesRequest) returns (LastEntriesResponse) {}
	// NOTE: ReadEntries only returns committed entries. If it hits a GAP or end of the stream,
	// it will return NOT_FOUND error.
	rpc ReadEntries(ReadEntriesRequest) returns (stream Entry) {}
}

message StreamTopology {
	int64 version = 1;
	repeated string server_ids = 2;
}

message NewWriterRequest {
	string server_id = 1;
	string stream_uri = 2;
	int64 stream_version = 3;

	string writer_id = 4;
}
message NewWriterResponse {}

message PutEntryInternalRequest {
	string server_id = 1;
	string stream_uri = 2;
	int64 stream_version = 3;

	Entry entry = 4;
	int64 committed_entry_id = 5;
	bytes committed_entry_md5 = 6;
}
message PutEntryInternalResponse{}

message LastEntriesRequest {
	string server_id = 1;
	string stream_uri = 2;
	int64 stream_version = 3;
}
message LastEntriesResponse {
	repeated Entry entries = 1;
}

message ReadEntriesRequest {
	string server_id = 1;
	string stream_uri = 2;
	int64 stream_version = 3;

	int64 start_entry_id = 4;
	int64 end_entry_id = 5;
}