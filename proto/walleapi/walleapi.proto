syntax = "proto3";
option go_package = "github.com/zviadm/walle/proto/walleapi";

service WalleApi {
	rpc ClaimWriter(ClaimWriterRequest) returns (ClaimWriterResponse) {}
	rpc PutEntry(PutEntryRequest) returns (PutEntryResponse) {}
	rpc StreamEntries(StreamEntriesRequest) returns (stream Entry) {}
}

message Entry {
	int64 entry_id = 1;
	string writer_id = 2;
	bytes data = 3;
	// checksum_md5 is a rolling md5 for all `data`.
	bytes checksum_md5 = 4;
}

message ClaimWriterRequest {
	string stream_uri = 1;
	int64 lease_ms = 2;
}
message ClaimWriterResponse {
	string writer_id = 1;
	Entry last_entry = 4;
}

message PutEntryRequest {
	string stream_uri = 1;
	Entry entry = 2;
	int64 committed_entry_id = 3;
	bytes committed_entry_md5 = 4;
}
message PutEntryResponse {
}

message StreamEntriesRequest {
	string stream_uri = 1;
	int64 from_entry_id = 2;
}

message Topology {
	// Matches EntryId where it is written in the stream.
	int64 version = 1;
	// maps streamURI -> StreamTopology
	map<string, StreamTopology> streams = 2;
	// maps ServerID -> ADDR
	map<string, string> servers = 3;
}

message StreamTopology {
	int64 version = 1;
	repeated string server_ids = 2;
}